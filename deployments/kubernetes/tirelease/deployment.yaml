apiVersion: v1
kind: Namespace
metadata:
  name: tirelease
---
apiVersion: apps/v1 # API Version, Must In 'kubectl api-versions'
kind: Deployment
metadata:
  name: tirelease
  namespace: tirelease
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: tirelease
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: tirelease
    spec:
      containers:
        - name: main
          image: hub.pingcap.net/ee/tirelease:latest
          command: ["/apps/tirelease"]
          args:
            - --config=/etc/config/config.yaml
            - --secret=/etc/secret-config
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          livenessProbe:
            httpGet:
              path: /ping
              port: 8080
            initialDelaySeconds: 2
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /ping
              port: 8080
            initialDelaySeconds: 2
            periodSeconds: 5
          volumeMounts:
            - name: timezone
              mountPath: /etc/localtime
            - name: config
              mountPath: /etc/config
              readOnly: true
            - name: secret-config
              mountPath: /etc/secret-config
              readOnly: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      volumes:
        - name: timezone
          hostPath:
            path: /usr/share/zoneinfo/Asia/Shanghai
        - name: config
          configMap:
            name: tirelease-config
        - name: secret-config
          secret:
            secretName: tirelease-secret-config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: tirelease
  namespace: tirelease
spec:
  type: NodePort # --"ClusterIp":内部虚拟IP,集群外部不可访问,"type"不设置默认是"ClusterIp"  --"NodePort":ClusterIp基础上暴露NodePort实现集群外可访问
  ports:
    # 流量路径: (nodeport可选) -> port -> targetPort
    - port: 80 # 内部集群访问Service的端口: Service将端口暴露在Cluster上, 集群内使用"ClusterIP:Port"可实现访问
      targetPort: 8080 # 后端Pod的服务端口: Pod将端口暴露的container上, 从port或nodePort进入的流量, 最终通过targetPort进入Pod中
      nodePort: 30750 # 外部访问Service的端口: Service将端口暴露在Node上, 集群外使用"NodeIP:NodePort"可实现访问. --此值30000-32767范围可指定(不指定时随机分配)
  selector:
    app: tirelease

---
# ingress -> service -> label selector -> pods
# Doc: https://kubernetes.io/docs/concepts/services-networking/ingress/#the-ingress-resource
# apiVersion example: https://yano3.hatenablog.jp/entry/2021/05/10/202814

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tirelease
  namespace: tirelease
  # annotations: # 设置 Ingress 对象向 Nginx 实例中添加规则, 比如: Rewrite URL重写
  #   nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - host: tirelease.pingcap.net # 映射到该域名: 在系统的hosts文件里配置--将这个域名映射到nginx-ingress-controller的ip地址就可以访问
      http: # 创建HTTP协议的访问
        paths:
          - path: / # 通过/路径就可以访问该服务(all paths match)
            pathType: Prefix # 以<path>分隔的URL路径前缀匹配,匹配对大小写敏感
            backend:  # 后端service的名称及端口号
              service:
                name: tirelease
                port:
                  number: 80
